#!/usr/bin/env bash
set -e

CURRENT_DIR=$(pwd)
COMMAND=''
DEFAULT_COMMAND=$(demeteorizer --server-only --output $OUTPUT_DIR)

if [[ ! $INPUT_DIR ]] || [[ ! $OUTPUT_DIR ]]; then
  printf "Input/Output directory variables must be set.\n"
  exit 1
fi

mkdir -p $INPUT_DIR
mkdir -p $OUTPUT_DIR

if [[ ! -d $INPUT_DIR ]] || [[ ! -d $OUTPUT_DIR ]]; then
  printf "Input/Output directories must exist.\n"
  exit 1
fi

if [[ ! -d $INPUT_DIR/.meteor ]]; then
  printf "$INPUT_DIR/.meteor directory must exist.\n"
  exit 1
fi

# Setup nvm
# NVM_DIR=/opt/home/.nvm
NVM_DIR=$OUTPUT_DIR/.modulus/nvm
source /opt/nvm/nvm.sh

if [[ ! -d $NVM_DIR ]]; then
  mkdir -p $NVM_DIR
fi

cp -R /opt/nvm/* $NVM_DIR
nvm use deploy

# Copy Meteor distribution to $HOME
printf "Initializing Meteor environment.\n"
cp -R /opt/home/.meteor $HOME

cd $INPUT_DIR
METEOR_VERSION=$(cat $INPUT_DIR/.meteor/release)
printf "Using $METEOR_VERSION.\n"

FLAGS='--server-only --output $OUTPUT_DIR'

if [[ $JSON ]] && [[ $DEBUG ]]; then
  FLAGS="$FLAGS --json $JSON --debug"
elif [[ $JSON ]] || [[ $DEBUG ]]; then
  if [[ $JSON ]]; then
    FLAGS="$FLAGS --json $JSON"
  elif [[ $DEBUG ]]; then
    FLAGS="$FLAGS --debug"
  fi
fi

cd $INPUT_DIR
METEOR_VERSION=$(cat $INPUT_DIR/.meteor/release)
printf "Using $METEOR_VERSION.\n"

if [[ -f $INPUT_DIR/package.json ]]; then
  printf "Installing root package.json dependencies.\n"
  npm install --production
fi

printf "Demeteorizer command: '$(echo demeteorizer $FLAGS)'.\n"
demeteorizer $FLAGS

if [[ -d $INPUT_DIR/node_modules ]]; then
  mv $INPUT_DIR/node_modules $OUTPUT_DIR
fi

# Searches a directory top-down looking for a file.
findFile() {
  find $2 -name $1 ! -path "*/node_modules/*" ! -path ".git/*" | \
  awk -F'/' '{print $0 "," NF-1}' | \
  sort -t, -nk2 | \
  awk -F',' '{print $1}' | \
  head -n 1
}

# Recursively search input directory for a package.json
PACKAGE_PATH=$(findFile "package.json" $OUTPUT_DIR/bundle/programs/server)

if [[ $PACKAGE_PATH ]]; then
  export PACKAGE_PATH

  if [[ $NPM_USER ]] && [[ $NPM_PASSWORD ]] && [[ $NPM_EMAIL ]]; then
    npm-login
  fi

  npm-install
fi
